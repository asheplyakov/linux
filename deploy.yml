---

- hosts: arm64
  tasks:
    - name: figure out kernel version
      command:
        cat include/config/kernel.release
      register: kernel_version_out
      delegate_to: localhost
    - set_fact:
        kernel_version: "{{ kernel_version_out.stdout_lines[0] }}"
    - debug: var=kernel_version
    - set_fact:
        kernel_tarball: "linux-{{ kernel_version }}-arm64.tgz"
    - debug: var=kernel_tarball
    - name: unpack kernel tarball
      unarchive:
        src: "{{ kernel_tarball }}"
        dest: "{{ remote_root|default('/') }}"
    - name: create initramfs
      command: >
        make-initrd -k "{{ kernel_version }}"
      when: use_initramfs|default('false')|bool
    - name: copy kernel to ESP
      copy:
        remote_src: yes
        src: "{{ remote_root|default('/') }}/boot/vmlinuz-{{ kernel_version }}"
        dest: "{{ remote_root|default('/') }}/boot/efi/vmlinuz"
    - name: copy initramfs to ESP
      copy:
        remote_src: yes
        src: "{{ remote_root|default('/') }}/boot/initrd-{{ kernel_version }}.img"
        dest: "{{ remote_root|default('/') }}/boot/efi/initrd.img"
      when: use_initramfs|default('false')|bool

    - name: figure out remote root device
      command: >
        findmnt --noheadings -o SOURCE,UUID -M {{ remote_root|default('/') }}
      register: remote_root_findmnt
      when: remote_root_device is undefined

    - set_fact:
        remote_root_id: "{{ remote_root_device }}"
      when: remote_root_device is defined
    - set_fact:
        remote_root_id: "{{ remote_root_findmnt.stdout_lines[0].split()[0] }}"
      when:
        - remote_root_device is undefined
        - not use_initramfs|default('false')|bool
    - set_fact:
        remote_root_id: "UUID={{ remote_root_findmnt.stdout_lines[0].split()[1] }}"
      when:
        - remote_root_device is undefined
        - use_initramfs|default('false')|bool

    - name: setup booting with startup.nsh
      template:
        src: startup.nsh.j2
        dest: "{{ remote_root|default('/') }}/boot/efi/startup.nsh"
    - name: reboot the box
      reboot:
        reboot_timeout: 300
      when:
        - ansible_connection != 'local'
        - ansible_connection != 'chroot'
